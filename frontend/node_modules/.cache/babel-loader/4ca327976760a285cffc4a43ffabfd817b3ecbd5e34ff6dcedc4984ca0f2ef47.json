{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh/`, {\n          refresh: refreshToken\n        });\n        const {\n          access\n        } = response.data;\n        localStorage.setItem('access_token', access);\n\n        // Retry the original request\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        return api(originalRequest);\n      }\n    } catch (refreshError) {\n      // Refresh failed, redirect to login\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (username, password) => api.post('/auth/login/', {\n    username,\n    password\n  }),\n  refresh: refresh => api.post('/auth/refresh/', {\n    refresh\n  })\n};\n\n// Vendor API\nexport const vendorAPI = {\n  getVendors: params => api.get('/vendors/', {\n    params\n  }),\n  getVendor: id => api.get(`/vendors/${id}/`),\n  createVendor: data => api.post('/vendors/', data),\n  updateVendor: (id, data) => api.patch(`/vendors/${id}/`, data),\n  deleteVendor: id => api.delete(`/vendors/${id}/`),\n  getVendorServices: id => api.get(`/vendors/${id}/services/`),\n  getVendorsWithActiveServices: () => api.get('/vendors/with-active-services/')\n};\n\n// Service API\nexport const serviceAPI = {\n  getServices: params => api.get('/services/', {\n    params\n  }),\n  getService: id => api.get(`/services/${id}/`),\n  createService: data => api.post('/services/', data),\n  updateService: (id, data) => api.patch(`/services/${id}/`, data),\n  deleteService: id => api.delete(`/services/${id}/`),\n  updateServiceStatus: (id, status) => api.patch(`/services/${id}/status/`, {\n    status\n  }),\n  getExpiringSoon: () => api.get('/services/expiring-soon/'),\n  getPaymentDueSoon: () => api.get('/services/payment-due-soon/')\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  getStats: () => api.get('/dashboard/stats/'),\n  getReminders: () => api.get('/reminders/')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","access","data","setItem","refreshError","removeItem","window","location","href","authAPI","login","username","password","vendorAPI","getVendors","params","get","getVendor","id","createVendor","updateVendor","patch","deleteVendor","delete","getVendorServices","getVendorsWithActiveServices","serviceAPI","getServices","getService","createService","updateService","deleteService","updateServiceStatus","getExpiringSoon","getPaymentDueSoon","dashboardAPI","getStats","getReminders"],"sources":["/Users/ankushgupta/Documents/my_project/vendor_management/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token && config.headers) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (refreshToken) {\n          const response = await axios.post(`${API_BASE_URL}/auth/refresh/`, {\n            refresh: refreshToken,\n          });\n\n          const { access } = response.data as any;\n          localStorage.setItem('access_token', access);\n\n          // Retry the original request\n          originalRequest.headers.Authorization = `Bearer ${access}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        window.location.href = '/login';\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (username: string, password: string) =>\n    api.post('/auth/login/', { username, password }),\n  refresh: (refresh: string) =>\n    api.post('/auth/refresh/', { refresh }),\n};\n\n// Vendor API\nexport const vendorAPI = {\n  getVendors: (params?: any) => \n    api.get('/vendors/', { params }),\n  getVendor: (id: number) => \n    api.get(`/vendors/${id}/`),\n  createVendor: (data: any) => \n    api.post('/vendors/', data),\n  updateVendor: (id: number, data: any) => \n    api.patch(`/vendors/${id}/`, data),\n  deleteVendor: (id: number) => \n    api.delete(`/vendors/${id}/`),\n  getVendorServices: (id: number) => \n    api.get(`/vendors/${id}/services/`),\n  getVendorsWithActiveServices: () => \n    api.get('/vendors/with-active-services/'),\n};\n\n// Service API\nexport const serviceAPI = {\n  getServices: (params?: any) => \n    api.get('/services/', { params }),\n  getService: (id: number) => \n    api.get(`/services/${id}/`),\n  createService: (data: any) => \n    api.post('/services/', data),\n  updateService: (id: number, data: any) => \n    api.patch(`/services/${id}/`, data),\n  deleteService: (id: number) => \n    api.delete(`/services/${id}/`),\n  updateServiceStatus: (id: number, status: string) =>\n    api.patch(`/services/${id}/status/`, { status }),\n  getExpiringSoon: () => \n    api.get('/services/expiring-soon/'),\n  getPaymentDueSoon: () => \n    api.get('/services/payment-due-soon/'),\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  getStats: () => \n    api.get('/dashboard/stats/'),\n  getReminders: () => \n    api.get('/reminders/'),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}